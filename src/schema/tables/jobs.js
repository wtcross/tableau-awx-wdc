export default {
  alias: 'jobs',
  id: 'jobs',
  incrementColumnId: 'id',
  description: 'A job is an instance of an Ansible playbook run, inventory sync, or project sync.',
  columns: [
    {
      id: 'allow_simultaneous',
      alias: 'allow_simultaneous',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(boolean)',
    },
    {
      id: 'ask_credential_on_launch',
      alias: 'ask_credential_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_diff_mode_on_launch',
      alias: 'ask_diff_mode_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_inventory_on_launch',
      alias: 'ask_inventory_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_job_type_on_launch',
      alias: 'ask_job_type_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_limit_on_launch',
      alias: 'ask_limit_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_skip_tags_on_launch',
      alias: 'ask_skip_tags_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_tags_on_launch',
      alias: 'ask_tags_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_variables_on_launch',
      alias: 'ask_variables_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'ask_verbosity_on_launch',
      alias: 'ask_verbosity_on_launch',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'controller_node',
      alias: 'controller_node',
      dataType: 'string',
      description: 'The instance that managed the isolated execution environment. (string)',
    },
    {
      id: 'created',
      alias: 'created',
      dataType: 'datetime',
      description: 'Timestamp when this job was created. (datetime)',
    },
    {
      id: 'description',
      alias: 'description',
      dataType: 'string',
      description: 'Optional description of this job. (string)',
    },
    {
      id: 'diff_mode',
      alias: 'diff_mode',
      dataType: 'bool',
      columnRole: 'dimension',
      description: 'If enabled, textual changes made to any templated files on the host are shown in the standard output (boolean)',
    },
    {
      id: 'elapsed',
      alias: 'elapsed',
      dataType: 'int',
      aggType: 'avg',
      columnRole: 'measure',
      description: 'Elapsed time in seconds that the job ran. (decimal)',
    },
    {
      id: 'execution_node',
      alias: 'execution_node',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'The node the job executed on. (string)',
    },
    {
      id: 'extra_vars',
      alias: 'extra_vars',
      dataType: 'string',
      description: '(string)',
    },
    {
      id: 'failed',
      alias: 'failed',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(boolean)',
    },
    {
      id: 'finished',
      alias: 'finished',
      dataType: 'datetime',
      description: 'The date and time the job finished execution. (datetime)',
    },
    {
      id: 'force_handlers',
      alias: 'force_handlers',
      dataType: 'bool',
      columnRole: 'dimension',
      description: '(boolean)',
    },
    {
      id: 'forks',
      alias: 'forks',
      dataType: 'int',
      aggType: 'avg',
      columnRole: 'measure',
      description: '(integer)',
    },
    {
      id: 'id',
      alias: 'id',
      dataType: 'int',
      columnRole: 'dimension',
      description: 'Database ID for this job. (integer)',
    },
    {
      id: 'instance_group',
      alias: 'instance_group',
      dataType: 'int',
      columnRole: 'dimension',
      description: 'The Rampart/Instance group the job was run under (field)',
    },
    {
      id: 'inventory',
      alias: 'inventory',
      dataType: 'int',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'job_explanation',
      alias: 'job_explanation',
      dataType: 'string',
      description: 'A status field to indicate the state of the job if it was not able to run and capture stdout (string)',
    },
    {
      id: 'job_tags',
      alias: 'job_tags',
      dataType: 'string',
      description: '(string)',
    },
    {
      id: 'job_template',
      alias: 'job_template',
      dataType: 'int',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'job_type',
      alias: 'job_type',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'run / check',
    },
    {
      id: 'launch_type',
      alias: 'launch_type',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'manual / relaunch / callback / scheduled / dependency / workflow / sync / scm',
    },
    {
      id: 'limit',
      alias: 'limit',
      dataType: 'string',
      description: '(string)',
    },
    {
      id: 'modified',
      alias: 'modified',
      dataType: 'datetime',
      description: 'Timestamp when this job was last modified. (datetime)',
    },
    {
      id: 'name',
      alias: 'name',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'Name of this job. (string)',
    },
    {
      id: 'playbook',
      alias: 'playbook',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'Path to the playbook relative to the project root. (string)',
    },
    {
      id: 'project',
      alias: 'project',
      dataType: 'int',
      columnRole: 'dimension',
      description: '(field)',
    },
    {
      id: 'scm_revision',
      alias: 'scm_revision',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'The SCM Revision from the Project used for this job, if available (string)',
    },
    {
      id: 'skip_tags',
      alias: 'skip_tags',
      dataType: 'string',
      description: '(string)',
    },
    {
      id: 'start_at_task',
      alias: 'start_at_task',
      dataType: 'string',
      description: '(string)',
    },
    {
      id: 'started',
      alias: 'started',
      dataType: 'datetime',
      description: 'The date and time the job was queued for starting. (datetime)',
    },
    {
      id: 'status',
      alias: 'status',
      dataType: 'string',
      description: 'new / pending / waiting / running / successful / failed / error / canceled',
    },
    {
      id: 'timeout',
      alias: 'timeout',
      dataType: 'int',
      columnRole: 'measure',
      description: 'The amount of time (in seconds) to run before the task is canceled. (integer)',
    },
    {
      id: 'type',
      alias: 'type',
      dataType: 'string',
      columnRole: 'dimension',
      description: 'Data type for this job. (choice)',
    },
    {
      id: 'unified_job_template',
      alias: 'unified_job_template',
      dataType: 'int',
      description: '',
    },
    {
      id: 'url',
      alias: 'url',
      dataType: 'string',
      description: 'URL for this job. (string)',
    },
    {
      id: 'use_fact_cache',
      alias: 'use_fact_cache',
      dataType: 'bool',
      columnRole: 'dimension',
      description: 'If enabled, Tower will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible. (boolean)',
    },
    {
      id: 'verbosity',
      alias: 'verbosity',
      dataType: 'int',
      columnRole: 'dimension',
      description: '0 (Normal) / 1 (Verbose) / 2 (More Verbose) / 3 (Debug) / 4 (Connection Debug) / 5 (WinRM Debug)',
    },
  ],
};
